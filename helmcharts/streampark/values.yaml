mysql:
  version: 8.3
  secretName: streampark-mysql
  rootPasswordKey: "mysql-root-password"
  rootPassword: "streampark"
  user: "streampark"
  password: "streampark"
  database: "streampark"
  storageSize: "10Gi"
  storageClassName: "ceph-block"
  nodePort: 30306
  configMapName: mysql-initdb-config
  
image:
  repository: "harbor.sdsp-stg.com/base/streampark-flink"
  pullPolicy: "IfNotPresent"
  tag: "2.1.4"
  pullSecret: ""

rbac:
  create: true

spec:
  container:
    env: [
      {
        name: TZ,
        value: "Asia/Taipei"
      },
      {
        name: DOCKER_HOST,
        value: "tcp://172.22.51.210:2375"
      },
      {
        name: LANG,
        value: en_US.UTF-8
      },
      {
        name: LANGUAGE,
        value: en_US:en
      },
      {
        name: LC_ALL,
        value: en_US.UTF-8
      }
    ]

  replicaCount: 1
  containerPort: 10000
  efsPort: 10030
  name: rest
  affinity: { }
  ## Compute Resources required by this container. Cannot be updated.
  ## More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container
  nodeSelector: { }
  ## Tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission,
  ## effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
  tolerations: [ ]
  ## Affinity is a group of affinity scheduling rules. If specified, the pod's scheduling constraints.
  ## More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#affinity-v1-core
  resources: {
    limits: {
      memory: "8Gi",
      cpu: "4"
    },
    requests: {
      memory: "1Gi",
      cpu: "1"
    }
  }

  # resources:
  #   limits:
  #     memory: "2Gi"
  #     cpu: "1"
  #   requests:
  #     memory: "1Gi"
  #     cpu: "500m"
  ## Indicates whether the container is running. If the liveness probe fails, the kubelet kills the container,
  ## and the container is subjected to its restart policy.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe:
    enabled: true
    initialDelaySeconds: "90"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"
  ## Indicates whether the container is ready to respond to requests. If the readiness probe fails,
  ## the endpoints controller removes the Pod's IP address from the endpoints of all Services that match the Pod.
  ## More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    enabled: true
    initialDelaySeconds: "90"
    periodSeconds: "30"
    timeoutSeconds: "20"
    failureThreshold: "3"
    successThreshold: "1"

ingress:
  enabled: true
  host: "streampark.sdsp-stg.com"
  path: "/"
  pathType: "Prefix"
  annotations: {}

service:
  ## type determines how the Service is exposed. Defaults to ClusterIP. Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer
  type: "ClusterIP"
  name: "streampark-service"

streamParkDefaultConfiguration:
  create: true
  append: true

streamParkServiceAccount:
  create: true
  annotations: {}
  name: "streampark"

streamParkPersistent:
  name: streampark-pvc
  size: 10Gi
  class: ceph-block